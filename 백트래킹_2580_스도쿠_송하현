#include <iostream>
#include <vector>
#include <stdlib.h>
using namespace std;
bool chk(vector<vector<int>> &sudoku, int x, int y, int num) {//되는 경우의 수 확인 후 반환
	for (int i = 0; i < 9; i++) {
		if (sudoku[y][i] == num || sudoku[i][x] == num || sudoku[((y / 3) * 3) + (i / 3)][((x / 3) * 3) + (i % 3)] == num)//차례대로 모든 숫자 대조 중 하나라도 겹치면 바로 끝내기
			return false;
	}
	return true;
}
void sdk(vector<vector<int>> sudoku, vector<int>& x, vector<int>& y, int cnt) {//경우의 수 실행 후 막히면 다시 뒤로 돌아와야함
	if (cnt >= x.size()) {
		for (int i = 0; i < 9; i++) {
			for (int j = 0; j < 9; j++) {
				cout << sudoku[i][j] << " ";
			}
			cout << "\n";
		}
		exit(0);
	}
	else {//어떻게 해야 여기서 이미 망했음을 감지하고 일찍 끝냄
		for (int i = 1; i <= 9; i++) {
			if (chk(sudoku, x[cnt], y[cnt], i)) {//확인하고 안되면 
				sudoku[y[cnt]][x[cnt]] = i;
				sdk(sudoku, x, y, cnt + 1);
			}
		}
	}
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	vector<vector<int>> sudoku(9, vector<int>(9, 0));
	vector<int> x;
	vector<int> y;
	for (int i = 0; i < 9; i++) {
		for (int j = 0; j < 9; j++) {
			cin >> sudoku[i][j];
			if (sudoku[i][j] == 0) {
				y.push_back(i);
				x.push_back(j);
			}
		}
	}
	sdk(sudoku, x, y, 0);
}
