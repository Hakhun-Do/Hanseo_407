import java.util.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        Deque<Integer> deque = new LinkedList<>();
        StringBuilder sb = new StringBuilder();

        for(int i=0; i<N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine(), " ");
            int x = Integer.parseInt(st.nextToken());
            int y;
            switch (x) {
                case 1:
                    y = Integer.parseInt(st.nextToken());
                    deque.addFirst(y);
                    break;

                case 2:
                    y = Integer.parseInt(st.nextToken());
                    deque.addLast(y);
                    break;

                case 3:
                    if(deque.isEmpty())
                        sb.append(-1).append("\n");
                    else
                        sb.append(deque.pollFirst()).append("\n");
                    break;

                case 4:
                    if(deque.isEmpty())
                        sb.append(-1).append("\n");
                    else
                        sb.append(deque.pollLast()).append("\n");
                    break;

                case 5:
                    sb.append(deque.size()).append("\n");
                    break;

                case 6:
                    if(deque.isEmpty())
                        sb.append(1).append("\n");
                    else
                        sb.append(0).append("\n");
                    break;

                case 7:
                    if(deque.isEmpty())
                        sb.append(-1).append("\n");
                    else
                        sb.append(deque.peek()).append("\n"); // 비어있으면 null
                    break;

                case 8:
                    if(deque.isEmpty())
                        sb.append(-1).append("\n");
                    else
                        sb.append(deque.peekLast()).append("\n"); // 비어있으면 null
                    break;
            }
        }

        System.out.println(sb);
    }
}
