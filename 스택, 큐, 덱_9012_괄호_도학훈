//수정 전
/*
//스택, 큐, 덱_9012_괄호_도학훈
#include<iostream>
#include<queue>
using namespace std;
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	string temp;

	int N, count1, count2;
	cin >> N;

	queue<string> queue;

	for (int i = 0; i < N; i++) {
		count1 = 0, count2 = 0;

		cin >> temp;
		for(char c : temp) {
			if (c == '(') count1++;
			else count2++;
		}
		if (count1 == count2) queue.push("YES");
		else queue.push("NO");
	}
	for (int i = 0; i < N; i++) {
		cout << queue.front() << "\n";
		queue.pop();
	}
}
*/
//--------------------------------------------------------------------------------------------------------------------------
//수정 후
//스택, 큐, 덱_9012_괄호_도학훈
#include <iostream>
#include <stack>
#include <string>
#include<vector>

using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	int N;
	cin >> N; // 몇 번 돌지 입력받음
	vector<string> vector;

	for (int i = 0; i < N;i++) {
		stack<char> stack;
		string temp;
		cin >> temp; // 괄호들을 문자열로 입력
		
		for (int j = 0; j < temp.length(); j++) {
			if (stack.empty()) { //스택이 비어있다면 push
				stack.push(temp[j]);
			}
			else { //스택이 비어있지 않고
				if (stack.top() == '(' && temp[j] == ')') { //top이 여는 괄호면서 다음 인자가 닫는 괄호면
					stack.pop();//Pop
				}
				else {//그 외의 경우는 모두 push
					stack.push(temp[j]);
				}
			}
		}
		if (stack.empty()) {
			vector.push_back("YES");
		}
		else {
			vector.push_back("NO");
		}
	}
	for (int i = 0; i < N; i++) {
		cout << vector[i] << "\n";
	}
}
